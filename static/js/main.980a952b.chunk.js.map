{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["require","Paper","Set","Circle","Rect","Text","birdPosition","Object","classCallCheck","this","x","y","Pipes","topx","topHeight","bottomx","bottomHeight","App","_this","possibleConstructorReturn","getPrototypeOf","call","state","pipesList","birdLocation","pauseDescend","startFlag","Score","setInitialState","bird","width","height","setState","conditionForPipeGeneration","Math","abs","randomize","floor","random","tempPipes","birdDescend","temp","pipesTemp","i","length","pipes","splice","push","startBirdDescend","clearInterval","birdNotGoingDownIntervalValue","detectKeyPress","e","keyCode","listval","setInterval","console","log","movingPipe","birdNotFlyingintervalValue","document","addEventListener","react_default","a","createElement","attr","fill","id","text","font-size","r","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.980a952b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nconst {Paper,Set,Circle,Rect,Text} = require('react-raphael');\r\nclass birdPosition {\r\n    constructor(){\r\n        this.x = 0;\r\n        this.y = 0;\r\n    }\r\n}\r\n\r\nclass Pipes{\r\n    constructor(){\r\n        this.topx = 0;\r\n        this.topHeight = 0;\r\n        this.bottomx = 0;\r\n        this.bottomHeight = 0;\r\n    }\r\n}\r\nclass App extends Component {\r\n    \r\n    state = {\r\n     pipesList : [],\r\n     birdLocation : new birdPosition(),\r\n     pauseDescend : true,\r\n     startFlag : false,\r\n    Score : 0\r\n    }\r\n\r\n    setInitialState = () => {\r\n        var bird = new birdPosition();\r\n        bird.x = this.width/2;\r\n        bird.y = this.height /2;\r\n        this.setState({\r\n            pipesList : [],\r\n        birdLocation : bird,\r\n        pauseDescend : true,\r\n        startFlag : false,\r\n        Score : 0\r\n        })\r\n    }\r\n    \r\n    constructor(){\r\n        super();\r\n        this.height = 500;\r\n        this.width = 300;\r\n        this.birdNotFlyingintervalValue = setInterval(this.birdDescend,40);\r\n        \r\n    }\r\n\r\n    conditionForPipeGeneration = (topHeight,bottomHeight) => {\r\n        if(topHeight + bottomHeight  > 500){\r\n            return false;\r\n        }\r\n        \r\n        if(topHeight  < 50 || bottomHeight < 50){\r\n            return false;\r\n        }\r\n\r\n        if(Math.abs(topHeight + bottomHeight -this.height) > 100  ){\r\n            return true ;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n    randomize =  () => {\r\n        \r\n        var topHeight , bottomHeight;\r\n        do{\r\n            topHeight =  Math.floor(Math.random()*this.height);\r\n            bottomHeight = Math.floor(Math.random()*this.height);\r\n        }while(!this.conditionForPipeGeneration(topHeight,bottomHeight));\r\n        var tempPipes = new Pipes();\r\n        tempPipes.topx = 480;\r\n        tempPipes.topHeight = topHeight\r\n        tempPipes.bottomx = 480;\r\n        tempPipes.bottomHeight = bottomHeight\r\n       \r\n        return tempPipes;\r\n        \r\n    }\r\n\r\n    birdDescend = () => {\r\n     \r\n        if(!this.state.pauseDescend){\r\n           // console.log(\"bird is descending  \");\r\n        var temp = this.state.birdLocation;\r\n        temp.y = temp.y + 10;\r\n        this.setState({birdLocation :temp});\r\n        }\r\n        \r\n        temp = this.state.birdLocation;\r\n        var pipesTemp = this.state.pipesList;\r\n        for(var i =0 ;i<this.state.pipesList.length;i++){\r\n        var pipes = this.state.pipesList[i];\r\n        \r\n        if(temp.x ===pipes.topx || Math.abs(temp.x-pipes.topx) < 10 ){\r\n         \r\n            if(temp.y > this.state.pipesList[i].topHeight &&temp.y <(this.height-this.state.pipesList[i].bottomHeight)){\r\n          \r\n                this.setState({Score : this.state.Score +1});\r\n                 if(pipes.topx < 0){\r\n                    pipesTemp.splice(i,1);\r\n                    pipesTemp.push(this.randomize());\r\n                }\r\n            }else{\r\n                this.setState({state : this.setInitialState()}); return ;\r\n            }\r\n    \r\n        }else{\r\n            if(pipes.topx < 0){\r\n                pipesTemp.splice(i,1);\r\n                pipesTemp.push(this.randomize());\r\n            }\r\n        }\r\n    }\r\n            \r\n            \r\n        this.setState({pipesList :pipesTemp });\r\n    }\r\n    \r\n    startBirdDescend = () => {\r\n        clearInterval(this.birdNotGoingDownIntervalValue);\r\n        this.setState({pauseDescend : false});\r\n    }\r\n    \r\n    detectKeyPress = (e) => {\r\n    \r\n    var keyValue = e.keyCode;\r\n    switch(keyValue){\r\n        case 32:{\r\n            if(!this.state.startFlag){\r\n                var listval = [];listval.push(this.randomize());\r\n                this.setState({pipesList : listval});\r\n                this.setState({startFlag : true});\r\n\r\n            }\r\n\r\n            var temp = this.state.birdLocation;\r\n            temp.y = temp.y - 10;\r\n            this.setState({birdLocation :temp});\r\n            this.setState({pauseDescend : true});\r\n            clearInterval(this.birdNotGoingDownIntervalValue);\r\n            this.birdNotGoingDownIntervalValue = setInterval(this.startBirdDescend,200);\r\n\r\n            break;\r\n        }\r\n        default :\r\n            console.log(\"invalid keys\");\r\n    }\r\n    \r\n    }\r\n    \r\n    movingPipe = () => {\r\n        var temp = this.state.pipesList;\r\n        for(var i =0 ; i< temp.length;i++){\r\n        temp[i].topx = temp[i].topx -10; \r\n        temp[i].bottomx = temp[i].bottomx -10;\r\n        }\r\n        \r\n     this.setState({pipesList : temp});\r\n    }\r\n    \r\n    componentDidMount(){\r\n        var temp = this.state.birdLocation;\r\n        temp.y=this.height/2;\r\n        temp.x=this.width/2;\r\n        this.setState({birdLocation : temp});\r\n        document.addEventListener(\"keypress\",this.detectKeyPress);\r\n        setInterval(this.movingPipe,40);\r\n       \r\n    }\r\n  render() {\r\n      var temp = [];\r\n      for(var i =0;i<this.state.pipesList.length;i++){\r\n          temp.push(\r\n            <Set>\r\n          <Rect width={30} height = {this.state.pipesList[i].topHeight} x={this.state.pipesList[i].topx} y={0} attr={{\"fill\":\"#0f0\"}} />\r\n        <Rect width={30} height = {this.state.pipesList[i].bottomHeight} x={this.state.pipesList[i].bottomx} y={this.height-this.state.pipesList[i].bottomHeight} attr={{\"fill\":\"#0f0\"}} />\r\n              </Set>\r\n          );\r\n      }\r\n    return (\r\n        <div>\r\n        <div id=\"flappyBirdCanvas\">\r\n        <Paper width={this.width} height={this.height}>\r\n        <Text x={250} y={30} text={\"Score : \" + this.state.Score} attr={{\"fill\" : \"#ff0\",\"font-size\" : \"20px\"}} />\r\n        <Circle x={this.state.birdLocation.x} y={this.state.birdLocation.y} r={10} attr={{\"fill\":\"#000\"}}/>\r\n            {temp}\r\n        </Paper>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}